// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Footer renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CardDetails
    date=""
    details=""
    name=""
    number=""
    patch_url=""
    rocketName=""
    rocketType=""
    site=""
    wiki_url=""
    youtube_url=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Patch
          patch_url=""
        />,
        <div
          className="details"
        >
          <MissionDetails
            date=""
            details=""
            name=""
            number=""
            rocketName=""
            rocketType=""
            site=""
          />
          <Links
            wikiImg="wiki-1.svg"
            wiki_url=""
            youtubeImg="youtube-1.svg"
            youtube_url=""
          />
        </div>,
      ],
      "className": "card",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "patch_url": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <MissionDetails
              date=""
              details=""
              name=""
              number=""
              rocketName=""
              rocketType=""
              site=""
            />,
            <Links
              wikiImg="wiki-1.svg"
              wiki_url=""
              youtubeImg="youtube-1.svg"
              youtube_url=""
            />,
          ],
          "className": "details",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "date": "",
              "details": "",
              "name": "",
              "number": "",
              "rocketName": "",
              "rocketType": "",
              "site": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "wikiImg": "wiki-1.svg",
              "wiki_url": "",
              "youtubeImg": "youtube-1.svg",
              "youtube_url": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Patch
            patch_url=""
          />,
          <div
            className="details"
          >
            <MissionDetails
              date=""
              details=""
              name=""
              number=""
              rocketName=""
              rocketType=""
              site=""
            />
            <Links
              wikiImg="wiki-1.svg"
              wiki_url=""
              youtubeImg="youtube-1.svg"
              youtube_url=""
            />
          </div>,
        ],
        "className": "card",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "patch_url": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <MissionDetails
                date=""
                details=""
                name=""
                number=""
                rocketName=""
                rocketType=""
                site=""
              />,
              <Links
                wikiImg="wiki-1.svg"
                wiki_url=""
                youtubeImg="youtube-1.svg"
                youtube_url=""
              />,
            ],
            "className": "details",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "date": "",
                "details": "",
                "name": "",
                "number": "",
                "rocketName": "",
                "rocketType": "",
                "site": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "wikiImg": "wiki-1.svg",
                "wiki_url": "",
                "youtubeImg": "youtube-1.svg",
                "youtube_url": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
